function RING = ALS_U_v21_4raft_SB
		
	global FAMLIST 
	FAMLIST = cell(0);
	
	disp('** Loading ALS_U v20r baseline lattice **');
	
	E0 = 2.00e+09;
	L0 = 196.50969188;
	C0 = 299792458;
	HarmNumber = 328;
	
	% Cavity
	% Name        L       U[V]       f(Hz)        h    method
	CAV = rfcavity('CAV', 0, 6.500000e+05, HarmNumber*C0/L0, HarmNumber, 'CavityPass');
	
	%% MARKERs
	GIRDER   =      marker('GIRDER'               , 'IdentityPass');
	SECT     = @(n) marker(sprintf('SECT%d'    ,n), 'IdentityPass');
	BPM      = @(n) marker(sprintf('BPM%d'     ,n), 'IdentityPass');
	CenOfStr = @(n) marker(sprintf('CenOfStr%d',n), 'IdentityPass');

	%% DRIFT SPACES
	D11  = drift('D11',   0.51457420, 'DriftPass');
	D12  = drift('D12',   0.075,      'DriftPass');
	D15  = drift('D15',   0.225,      'DriftPass');
    D33B = drift('D33B',  0.05010863, 'DriftPass');
	% Drift elements accommodating the BPMs}
	DX   = drift('DX',    0.0375,     'DriftPass');
	D11A = drift('D11A',  0.47707420, 'DriftPass');
	
	%% QUADRUPOLES
    QF1  = quadrupole('QF1',  0.180,   13.76775000,  'StrMPoleSymplectic4RadPass');
    QD1  = quadrupole('QD1',  0.140,  -13.43180000,  'StrMPoleSymplectic4RadPass');
    QD2b = quadrupole('QD2b', 0.1325,  -15.60000000,  'StrMPoleSymplectic4RadPass');
    QD3b = quadrupole('QD3b', 0.1325,  -14.57315000,  'StrMPoleSymplectic4RadPass');
	
	%% DIPOLES
	BEND1  = sbend('BEND1',  0.340   ,    0.058177641728,   0,    0,   -2.999999  ,  'BndMPoleSymplectic4RadPass');
	BEND2  = sbend('BEND2',  0.500   ,    0.063629218728,   0,    0,   -7.057403  ,  'BndMPoleSymplectic4RadPass');
	BEND3  = sbend('BEND3',  0.500   ,    0.065671458728,   0,    0,   -7.057403  ,  'BndMPoleSymplectic4RadPass');
	QF2    = sbend('QF2',    0.190   ,   -0.0015962140  ,   0,    0,   10.223970  ,  'BndMPoleSymplectic4RadPass');
	QF3    = sbend('QF3',    0.115   ,   -0.0001084545  ,   0,    0,   10.546120  ,  'BndMPoleSymplectic4RadPass');
	QF4    = sbend('QF4',    0.305   ,   -0.0074938170  ,   0,    0,   15.282560  ,  'BndMPoleSymplectic4RadPass');
	QF5    = sbend('QF5',    0.305   ,   -0.0074938170  ,   0,    0,   15.795710  ,  'BndMPoleSymplectic4RadPass');
	QF6    = sbend('QF6',    0.305   ,   -0.0074938170  ,   0,    0,   15.761200  ,  'BndMPoleSymplectic4RadPass');
 	QF4b   = sbend('QF4b',   0.305   ,   -0.0074938170  ,   0,    0,   15.35281000  ,  'BndMPoleSymplectic4RadPass');
	QF5b   = sbend('QF5b',   0.305   ,   -0.0074938170  ,   0,    0,   16.45059000,  'BndMPoleSymplectic4RadPass');
	QF6b   = sbend('QF6b',   0.305   ,   -0.0074938170  ,   0,    0,   16.28361000,  'BndMPoleSymplectic4RadPass');
	BEND2b = sbend('BEND2b', 0.500   ,    0.063629218728,   0,    0,   -7.05813300 ,  'BndMPoleSymplectic4RadPass');
	BEND3b = sbend('BEND3b', 0.500   ,    0.065671458728,   0,    0,   -7.05813300 ,  'BndMPoleSymplectic4RadPass');
	SB     = sbend('SB'    , 0.134914,    0.065671458726,   0,    0,    0.22588705,  'BndMPoleSymplectic4RadPass');


	%% SEXTUPOLES
	SF   = sextupole('SF',   0.280,   781.45580473,  'StrMPoleSymplectic4RadPass');
	SD   = sextupole('SD',   0.280,  -640.18897216,  'StrMPoleSymplectic4RadPass');
	SHH  = sextupole('SHH',  0.075,    38.85843000,  'StrMPoleSymplectic4RadPass');
	SHH2 = sextupole('SHH2', 0.075,  -578.19240000,  'StrMPoleSymplectic4RadPass');
	
	
	%% Begin Lattice
	
	% Straight
	HalfStraight = [D11 D11 D11 D11]; % Half straight section
	
	
	% Start of ARC (same for all sectors)
	Arc_Up = [GIRDER  ...
		D11A BPM(1) DX ...
		SHH ...
		D12 ...
		QF1 ...
		DX BPM(2) DX ...
		QD1 ...
		DX BPM(3) DX ...
		SHH2 ...
		D12 ...
		BEND1 ...
		DX BPM(4) DX ...
		SD ...
		D12 ...
		QF2 ...
		D12 ...
		SF ...
		DX BPM(5) DX ...
		QF3 ...
		GIRDER GIRDER...
		D15];
	
	% End of ARC (same for all sectors)
	Arc_Down = [D15 ...
		QF3 ...
		D12 ...
		SF ...
		DX BPM(15) DX ...
		QF2 ...
		D12 ...
		SD ...
		DX BPM(16) DX ...
		BEND1 ...
		DX DX ...
		SHH2 ...
		DX BPM(17) DX ...
		QD1 ...
		DX BPM(18) DX ...
		QF1 ...
		D12 ...
		SHH ...
		DX BPM(19) D11A ...
		GIRDER];
	
	% Superperiod w/o superbends
	SUP = [BEND2 ...
		DX BPM(6) DX ...
		QF4 ...
		DX BPM(7) DX ...
		BEND3 ...
		DX BPM(8) DX ...
		QF5 ...
		D12 ...
		BEND3 ...
		DX BPM(9) DX ...
		QF6 ...
		DX BPM(10) DX ...
		GIRDER GIRDER...
		BEND3 ...
		DX BPM(11) DX ...
		QF6 ...
		DX BPM(12) DX ...
		BEND3 ...
		DX BPM(13) DX ...
		QF5 ...
		D12 ...
		BEND3 ...
		D12 ...
		QF4 ...
		DX BPM(14) DX ...
		GIRDER GIRDER...
		BEND2];
	
	% Superperiod w/ superbends
	SUPSB = [BEND2b ...
		DX BPM(6) DX ...
		QF4b ...
		DX BPM(7) DX ...
		BEND3b ...
		DX BPM(8) DX ...
		QF5b ...
		D12 ...
		QD2b ... % Superbend starts
		D33B SB D33B ...
        QD3b ... % Superbend ends
		DX BPM(9) DX ...
		QF6b ...
		DX BPM(10) DX ...
		GIRDER GIRDER...
		BEND3b ...
		DX BPM(11) DX ...
		QF6b ...
		DX BPM(12) DX ...
		QD3b ... % Superbend starts
		D33B SB D33B ...
        QD2b ... % Superbend ends
		DX BPM(13) DX ...
		QF5b ...
		D12 ...
		BEND3b ...
		D12 ...
		QF4b ...
		DX BPM(14) DX ...
		GIRDER GIRDER...
		BEND2b];
	
	
	
	
	
	
	ELIST = [                                       CenOfStr(12)     HalfStraight ...
		SECT(1)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 1)     HalfStraight ...
		SECT(2)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 2) CAV HalfStraight ...
		SECT(3)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 3)     HalfStraight ...
		SECT(4)  Arc_Up SUPSB Arc_Down HalfStraight CenOfStr( 4)     HalfStraight ...
		SECT(5)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 5)     HalfStraight ...
		SECT(6)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 6)     HalfStraight ...
		SECT(7)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 7)     HalfStraight ...
		SECT(8)  Arc_Up SUPSB Arc_Down HalfStraight CenOfStr( 8)     HalfStraight ...
		SECT(9)  Arc_Up SUP   Arc_Down HalfStraight CenOfStr( 9)     HalfStraight ...
		SECT(10) Arc_Up SUP   Arc_Down HalfStraight CenOfStr(10)     HalfStraight ...
		SECT(11) Arc_Up SUP   Arc_Down HalfStraight CenOfStr(11)     HalfStraight ...
		SECT(12) Arc_Up SUPSB Arc_Down HalfStraight                           ];
	
	% Locate function output
	RING=cell(size(ELIST));
	for i=1:length(RING)
		RING{i}        = FAMLIST{ELIST(i)}.ElemData;
		RING{i}.Energy = E0;
	end
		
end
